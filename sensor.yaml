apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: apollon-sensor
spec: 
  template:
    serviceAccountName: argooperator
  dependencies:
    - name: github-webhook-dep
      eventSourceName: github
      eventName: example
  triggers:
    - template:
        name: argo-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: trigger--
                namespace: argo-events
              spec:
                serviceAccountName: argooperator
                arguments:
                  parameters:
                  - name: repo-url
                    value: my-repo-url
                  - name: branch
                    value: master
                  - name: repo-short-commit
                    value: foo
                  - name: repo-name
                    value: repo-name
                  - name: sonar-scanner
                    value: "-X  -Dsonar.language=php -Dsonar.qualitygate.wait=true  -Dsonar.sources=. -Dsonar.host.url=http://sonarqube-sonarqube.sonarqube:9000  -Dsonar.projectKey=test  -Dsonar.login=sqp_971214ca742b20104d84db26aeac86d60387fd24   -Dsonar.sourceEncoding=UTF-8 -Dsonar.exclusions=**/*.js,**/*.css,**/*.scss,**/inlineall.html"
                entrypoint: main
                templates:
                  - name: main
                    dag:
                      tasks:
                        - name: clone
                          template: clone
                          arguments:
                            parameters:
                              - name: repo
                                value: "{{workflow.parameters.repo-url}}"
                              - name: branch
                                value: "{{workflow.parameters.branch}}"
                              - name: short-commit
                                value: "{{workflow.parameters.repo-short-commit}}"
                        - name: sonar-scanner
                          template: sonar-scanner
                          arguments:
                            parameters:
                              - name: repo
                                value: "{{workflow.parameters.repo-url}}"
                              - name: branch
                                value: "{{workflow.parameters.branch}}"
                              - name: short-commit
                                value: "{{workflow.parameters.repo-short-commit}}"
                              - name: project-name
                                value: "{{workflow.parameters.repo-name}}"
                              - name: sonar-env
                                value: "{{workflow.parameters.sonar-scanner}}"
                          depends: "clone"
                  - name: clone
                    inputs:
                      parameters:
                        - name: repo
                        - name: branch
                        - name: short-commit
                    container:
                      image: alpine:latest
                      command: [sh, -c]
                      args: ["apk update && echo '{{inputs.parameters.repo}}''{{inputs.parameters.short-commit}}' "]
                  - name: sonar-scanner
                    inputs:
                      parameters:
                        - name: repo
                        - name: project-name
                        - name: branch
                        - name: short-commit
                        - name: sonar-env
                    container:
                      image: sonarsource/sonar-scanner-cli:latest
                      command: [sh, -c]
                      args: ["apk update && apk add git && git clone {{inputs.parameters.repo}} && cd deneme && sonar-scanner {{inputs.parameters.sonar-env}} -Dsonar.projectVersion={{inputs.parameters.project-name}}--{{inputs.parameters.branch}}--{{inputs.parameters.short-commit}} "]

          parameters:
            - src:
                dependencyName: github-webhook-dep
                dataKey: body.repository.clone_url
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-webhook-dep
                dataKey: body.ref
              dest: spec.arguments.parameters.1.value
            - src: 
                dependencyName: github-webhook-dep
                dataKey: body.commits.0.id
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: github-webhook-dep
                dataKey: body.repository.name
              dest: spec.arguments.parameters.3.value
              




